#include"Queue.h"template <class E>SeqQueue<E>::SeqQueue(int sz)    : front(0), rear(0), maxSize(sz) {     //构造函数    elements = new E[maxSize];    assert(elements != NULL);};template <class E>bool SeqQueue<E>::EnQueue(E x) {    //若队列不满, 则将x插入到该队列队尾, 否则返回        if (IsFull() == true) return false;    elements[rear] = x;                    //先存入    rear = (rear + 1) % maxSize;       //尾指针加一    return true;};template <class E>bool SeqQueue<E>::DeQueue(E& x) {    //若队列不空则函数退队头元素并返回其值    if (IsEmpty() == true) return false;    x = elements[front];                  //先取队头    front = (front + 1) % maxSize;   //再队头指针加一    return true;};template <class E>bool SeqQueue<E>::getFront(E& x) {    //若队列不空则函数返回该队列队头元素的值    if (IsEmpty() == true) return false;    //队列空    x = elements[front];		    //返回队头元素    return true;};